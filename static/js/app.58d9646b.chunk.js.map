{"version":3,"sources":["screens/Frenzy/FrenzyComponent.tsx","assets/logo.png","firebase/firebase.ts","store/taskReducer.ts","components/Text.tsx","assets/icon.png","components/Button.tsx","screens/Auth/styles.ts","screens/Auth/SocialLogins.tsx","screens/Auth/handler.ts","components/Input.tsx","components/Form.tsx","screens/Auth/Login.tsx","screens/Auth/Register.tsx","screens/Home/FrenzyQuery.tsx","screens/Home/Home.tsx","screens/Home/AddPost.tsx","components/Error.tsx","screens/Frenzy/Comment/Reply.tsx","screens/Frenzy/Comment/Comment.tsx","screens/Frenzy/Frenzy.tsx","App.tsx","store/store.ts","webpack:///C:/Users/user/Desktop/Projects/fiverr/ViralPage/index.tsx?a2c0","components/Loading.tsx"],"names":["FrenzyComponent","Frenzy","navigation","containerStyle","afterDelete","user","useSelector","selectUser","useState","frenzy","setFrenzy","deleteFrenzyBatch","query","resolve","a","async","get","snapshot","db","firebaseApp","firestore","size","batch","docs","forEach","doc","delete","ref","commit","process","nextTick","useEffect","ViewFrenzy","uid","navigate","JSON","stringify","base","collection","id","path","frenzyAlreadyViewed","console","log","exists","update","viewCount","Firestore","FieldValue","increment","set","createdAt","serverTimestamp","style","styles","frenzyContainer","frenzyAvatarContainer","frenzyAvatar","source","uri","photo","title","charAt","backgroundColor","borderRadius","titleStyle","color","fontSize","fontWeight","marginLeft","username","frenzyEdit","name","type","onPress","EditFrenzy","likes","views","viewQuery","orderBy","limit","likeQuery","Promise","reject","catch","alert","DeleteFrenzy","frenzyLink","Linking","openURL","link","e","frenzyDescription","description","tags","map","tag","key","frenzyIcons","frenzyIcon","liked","likeCount","LikeFrenzy","commentCount","message","StyleSheet","create","marginRight","marginVertical","width","minWidth","display","flexDirection","alignItems","justifyContent","padding","borderBottomColor","borderBottomWidth","margin","module","exports","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","taskReducer","createSlice","initialState","userErrors","userLoading","fontsLoading","reducers","setUser","state","action","payload","setUserErrors","setUserLoading","setFontsLoading","actions","reducer","userError","selectLoading","_fontsLoading","load","which","Heading","children","fontFamily","SubHeading","Span","Button","props","btn","marginTop","mt","bg","btnText","textColor","TouchableOpacity","Text","container","flex","logo","resizeMode","form","maxWidth","modal","position","closeModal","left","top","WebStyles","height","marginBottom","bottom","Platform","OS","SocialLogins","socialToggle","setSocialToggle","View","visible","contentContainerStyle","overlayAccessibilityLabel","animationType","transparent","registerHandler","fields","where","createUserWithEmailAndPassword","email","password","updateProfile","displayName","photoURL","sendEmailVerification","then","res","data","formattedUser","toJSON","status","loginHandler","signInWithEmailAndPassword","Input","React","forwardRef","validationColor","touched","errors","input","shadowColor","paddingHorizontal","paddingVertical","TextInput","selectionColor","validate","Form","validationSchema","Validator","shape","useFormik","initialValues","onSubmit","handleChange","values","handleSubmit","handleBlur","resetForm","reference","useRef","componentRef","InputProps","index","inputContainerStyle","inputStyle","value","onChangeText","onBlur","current","onSubmitEditing","focus","nextFocus","Component","button","Login","useNavigation","error","dispatch","useDispatch","loading","Loading","ScrollView","SafeAreaView","Image","require","KeyboardAvoidingView","textAlign","placeholder","keyboardType","textContentType","secureTextEntry","Yup","required","emailVerified","replace","login","Register","min","register","FrenzyQuery","frenzies","setfrenzies","page","setPage","basePath","pageSize","setQuery","unsubscribe","onSnapshot","_frenzies","promise","viewed","all","result","filter","_","last","startAt","disabled","opacity","first","endBefore","r","limitToLast","minHeight","Dimensions","Home","refreshing","setRefreshing","onRefresh","useCallback","NativeModules","DevSettings","reload","handleHeaderBtnPress","signOut","useLayoutEffect","setOptions","header","headerImage","bounces","refreshControl","RefreshControl","newPost","paddingTop","StatusBar","currentHeight","paddingRight","paddingLeft","headerBtn","AddPost","route","headerTitle","setLoading","setError","newFrenzy","setNewFrenzy","descriptionInputHeight","setDIH","params","setTags","url","multiline","onContentSizeChange","nativeEvent","contentSize","initialText","textInputProps","initialTags","onChangeTags","onTagPress","tagLabel","event","deleted","flexBasis","maxNumberOfTags","renderTag","marginHorizontal","isComponent","updatedAt","add","launchFrenzy","fontStyle","Modal","dismissable","alignSelf","goBack","Error","Reply","reply","borderTopColor","borderTopWidth","by","Comment","frenzyId","replies","comment","setComment","seeReply","setSeeReply","push","textDecoration","borderColor","borderWidth","parse","commenting","setCommenting","commentList","comments","App","Stack","createStackNavigator","LogBox","ignoreLogs","_userLoading","_setUserLoading","setUserError","useFonts","ViralFont","fontsLoaded","onAuthStateChanged","code","NavigationContainer","Navigator","initialRouteName","screenOptions","headerTitleAlign","headerTitleStyle","Screen","component","store","configureStore","registerRootComponent"],"mappings":"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","file":"static/js/app.58d9646b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Linking, StyleSheet, View } from 'react-native'\r\nimport { Icon, Avatar } from 'react-native-elements'\r\nimport { useSelector } from 'react-redux'\r\nimport Loading from '../../components/Loading'\r\nimport { Span, SubHeading } from '../../components/Text'\r\nimport { firebaseApp, Firestore } from '../../firebase/firebase'\r\nimport { selectUser } from '../../store/taskReducer'\r\nimport Frenzy from './FrenzyContext'\r\n\r\nconst FrenzyComponent = ({ Frenzy, navigation, containerStyle, afterDelete }: any) => {\r\n    const user = useSelector(selectUser)\r\n    const [frenzy, setFrenzy] = useState<Frenzy>(Frenzy)\r\n    useEffect(() => setFrenzy(Frenzy), [Frenzy])\r\n    async function deleteFrenzyBatch(query: any, resolve: any) {\r\n        const snapshot = await query.get();\r\n        const db = firebaseApp.firestore();\r\n        const batchSize = snapshot.size;\r\n        if (batchSize === 0) {\r\n            // When there are no documents left, we are done\r\n            resolve();\r\n            return;\r\n        }\r\n\r\n        // Delete documents in a batch\r\n        const batch = db.batch();\r\n        snapshot.docs.forEach((doc: any) => {\r\n            batch.delete(doc.ref);\r\n        });\r\n        await batch.commit();\r\n\r\n        // Recurse on the next process tick, to avoid\r\n        // exploding the stack.\r\n        process.nextTick(() => {\r\n            deleteFrenzyBatch(query, resolve);\r\n        });\r\n    }\r\n    const DeleteFrenzy = async (id: string) => {\r\n        try {\r\n            const frenzy = await firebaseApp.firestore().collection(\"frenzies\").doc(id);\r\n            await frenzy.delete();\r\n            const likes = firebaseApp.firestore().collection(\"frenzies\").doc(id).collection(\"likes\");\r\n            const views = firebaseApp.firestore().collection(\"frenzies\").doc(id).collection(\"views\");\r\n            const viewQuery = views.orderBy(\"createdAt\").limit(10);\r\n            const likeQuery = likes.orderBy(\"createdAt\").limit(10);\r\n            new Promise((resolve, reject) => {\r\n                deleteFrenzyBatch(likeQuery, resolve).catch(reject);\r\n            });\r\n            new Promise((resolve, reject) => {\r\n                deleteFrenzyBatch(viewQuery, resolve).catch(reject);\r\n            });\r\n            alert(\"Deleted the frenzy\")\r\n            afterDelete();\r\n        }\r\n        catch {\r\n            alert(\"Something went wrong..\")\r\n        }\r\n    }\r\n    const EditFrenzy = (frenzy: any) => {\r\n        navigation.navigate(\"AddPost\", frenzy)\r\n    }\r\n    const ViewFrenzy = async () => {\r\n        if (!user?.uid) return navigation.navigate(\"Frenzy\", { frenzy: JSON.stringify(frenzy) })\r\n        const base = firebaseApp.firestore().collection(\"frenzies\");\r\n        const path = await base.doc(frenzy.id).collection(\"views\");\r\n        const frenzyAlreadyViewed = await path.doc(user?.uid).get();\r\n        console.log(frenzyAlreadyViewed.exists)\r\n        if (frenzyAlreadyViewed.exists) {\r\n            navigation.navigate(\"Frenzy\", { frenzy: JSON.stringify(frenzy) })\r\n        }\r\n        else {\r\n            await base.doc(frenzy.id).update({\r\n                viewCount: Firestore.FieldValue.increment(1)\r\n            })\r\n            await path.doc(user?.uid).set({\r\n                createdAt: Firestore.FieldValue.serverTimestamp()\r\n            })\r\n            navigation.navigate(\"Frenzy\", { frenzy: JSON.stringify(frenzy) })\r\n        }\r\n    }\r\n    const LikeFrenzy = async () => {\r\n        if (!user?.uid) return;\r\n        const base = firebaseApp.firestore().collection(\"frenzies\");\r\n        const path = await base.doc(frenzy.id).collection(\"likes\");\r\n        const frenzyAlreadyLiked = await path.doc(user?.uid).get();\r\n        if (frenzyAlreadyLiked.exists) {\r\n            await base.doc(frenzy.id).update({\r\n                likeCount: Firestore.FieldValue.increment(-1)\r\n            })\r\n            await path.doc(user?.uid).delete()\r\n        }\r\n        else {\r\n            await base.doc(frenzy.id).update({\r\n                likeCount: Firestore.FieldValue.increment(1)\r\n            })\r\n            await path.doc(user?.uid).set({\r\n                createdAt: Firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n    }\r\n    if (!frenzy.id) return <Loading message=\"Loading frenzy...\" />\r\n    return (\r\n        <View style={[styles.frenzyContainer, containerStyle]}>\r\n            <View style={styles.frenzyAvatarContainer}>\r\n                <View style={styles.frenzyAvatar}>\r\n                    <Avatar source={{ uri: frenzy?.photo }} title={frenzy?.user?.charAt(0)} containerStyle={{ backgroundColor: \"black\", borderRadius: 50 }} titleStyle={{ color: \"white\" }} />\r\n                    <Span style={{ fontSize: 16, fontWeight: \"700\", marginLeft: 10 }}>@{frenzy?.user}</Span>\r\n                </View>\r\n                {frenzy?.user === user?.username ? (\r\n                    <View style={styles.frenzyEdit}>\r\n                        <Icon name=\"edit\" type=\"ëntypo\" onPress={() => EditFrenzy(frenzy)} />\r\n                        <Icon name=\"trash\" type=\"entypo\" style={{ marginLeft: 10 }} onPress={() => DeleteFrenzy(frenzy?.id)} />\r\n                    </View>\r\n                ) : <Span></Span>}\r\n            </View>\r\n            <View style={styles.frenzyLink}>\r\n                <SubHeading style={{ color: \"blue\" }} onPress={() => Linking.openURL(frenzy?.link).catch(e => alert(\"Couldn't Open the link\"))}>{frenzy?.link}</SubHeading>\r\n            </View>\r\n            <View style={styles.frenzyDescription}>\r\n                <Span>{frenzy?.description}</Span>\r\n                {frenzy?.tags?.map((tag: string) => (\r\n                    <Span style={{ color: \"blue\" }} key={tag}>#{tag}</Span>\r\n                ))}\r\n            </View>\r\n            <View style={styles.frenzyIcons}>\r\n                <View style={styles.frenzyIcon}>\r\n                    <Icon name=\"eye\" type=\"antdesign\" onPress={() => ViewFrenzy()} />\r\n                    <Span>{frenzy?.viewCount}</Span>\r\n                </View>\r\n                <View style={styles.frenzyIcon}>\r\n                    <Icon name={frenzy?.liked ? \"heart\" : \"hearto\"} type=\"antdesign\" onPress={() => LikeFrenzy()} />\r\n                    <Span>{frenzy?.likeCount}</Span>\r\n                </View>\r\n                <View style={styles.frenzyIcon}>\r\n                    <Icon name=\"chat\" type=\"entypo\" onPress={() => ViewFrenzy()} />\r\n                    <Span>{frenzy?.commentCount}</Span>\r\n                </View>\r\n\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default FrenzyComponent\r\n\r\nconst styles = StyleSheet.create({\r\n    frenzyContainer: {\r\n        backgroundColor: \"white\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginVertical: 40,\r\n        width: \"60%\",\r\n        minWidth: 340,\r\n        borderRadius: 20\r\n    },\r\n    frenzyAvatarContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        padding: 10,\r\n        borderBottomColor: \"gray\",\r\n        borderBottomWidth: 2\r\n    },\r\n    frenzyAvatar: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\"\r\n    },\r\n    frenzyEdit: {\r\n        flexDirection: \"row\"\r\n    },\r\n    frenzyLink: {\r\n        padding: 10\r\n    },\r\n    frenzyDescription: {\r\n        padding: 10,\r\n        backgroundColor: \"#ebebeb\",\r\n        margin: 10,\r\n        borderRadius: 10\r\n    },\r\n    frenzyIcons: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-evenly\",\r\n        padding: 10\r\n    },\r\n    frenzyIcon: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n})\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.0370fd19.png\";","import firebase from \"firebase\";\r\n//Services\r\nimport \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n//Firebase Setup\r\n//TO change the api keys refer  to .env file in root directory\r\n//Environments\r\nimport {\r\n  API_KEY,\r\n  AUTHDOMAIN,\r\n  DB_URL,\r\n  PROJ_ID,\r\n  STORAGEBUCKET,\r\n  MSID,\r\n  APPID,\r\n} from \"@env\";\r\nconst firebaseConfig = {\r\n  apiKey: API_KEY,\r\n  authDomain: AUTHDOMAIN,\r\n  databaseURL: DB_URL,\r\n  projectId: PROJ_ID,\r\n  storageBucket: STORAGEBUCKET,\r\n  messagingSenderId: MSID,\r\n  appId: APPID,\r\n};\r\nconst firebaseApp = firebase.apps.length\r\n  ? firebase.app()\r\n  : firebase.initializeApp(firebaseConfig);\r\nconst Auth = firebase.auth;\r\nconst Firestore = firebase.firestore;\r\nexport { firebaseApp, Auth, Firestore };\r\nexport interface UserContext extends firebase.User {\r\n  username: string;\r\n  status: \"signedout\" | \"loggedin\" | \"idle\";\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { StateContext } from \"./taskContext\";\r\n\r\nconst initialState: StateContext = {\r\n  user: null,\r\n  //errors\r\n  userErrors: null,\r\n  //Loaders\r\n  userLoading: null,\r\n  fontsLoading: null,\r\n};\r\nconst taskReducer = createSlice({\r\n  name: \"reducer\",\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    setUserErrors: (state, action) => {\r\n      state.userErrors = action.payload;\r\n    },\r\n    setUserLoading: (state, action) => {\r\n      state.userLoading = action.payload;\r\n    },\r\n    setFontsLoading: (state, action) => {\r\n      state.fontsLoading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, setUserErrors, setFontsLoading, setUserLoading } =\r\n  taskReducer.actions;\r\n\r\n//Selectors\r\nexport const selectUser = (state: { reducer: StateContext }) =>\r\n  state.reducer.user;\r\nexport const userError = (state: { reducer: StateContext }) =>\r\n  state.reducer.userErrors;\r\nexport const selectLoading = (state: { reducer: StateContext }) => {\r\n  const { fontsLoading, userLoading } = state.reducer;\r\n  const _fontsLoading = fontsLoading || fontsLoading === null;\r\n  return {\r\n    load: userLoading || _fontsLoading,\r\n    which: _fontsLoading ? \"Assets\" : userLoading ? \"Session\" : \"Viral Page\",\r\n  };\r\n};\r\nexport default taskReducer.reducer;\r\n","import React from \"react\"\r\nimport { Text } from \"react-native\"\r\n\r\nexport const Heading = ({ children, onPress }: any) => {\r\n    return <Text onPress={onPress} style={{ color: \"#000\", fontSize: 48, fontFamily: \"ViralFont\" }}>{children}</Text>\r\n}\r\nexport const SubHeading = ({ children, style, onPress }: any) => {\r\n    return <Text onPress={onPress} style={{ color: \"#000\", fontSize: 24, fontFamily: \"ViralFont\", ...style }}>{children}</Text>\r\n}\r\nexport const Span = ({ children, style, onPress }: any) => {\r\n    return <Text onPress={onPress} style={{ fontSize: 14, fontFamily: \"ViralFont\", marginVertical: 0, ...style }}>{children}</Text>\r\n}\r\nexport const Paragraph = ({ children, onPress }: any) => {\r\n    return <Text onPress={onPress} style={{ color: \"#000\", fontSize: 16, fontFamily: \"ViralFont\", lineHeight: 20, letterSpacing: 10 }}>{children}</Text>\r\n}","module.exports = __webpack_public_path__ + \"static/media/icon.b179d9aa.png\";","import React, { ReactChild, ReactChildren } from 'react'\r\nimport { StyleSheet, Text, TouchableOpacity, TouchableOpacityProps } from 'react-native'\r\ninterface ButtonProps extends TouchableOpacityProps {\r\n    children: ReactChild | ReactChildren,\r\n    bg?: string,\r\n    textColor?: string,\r\n    mt?: number,\r\n    style?: any\r\n}\r\nconst Button = (props: ButtonProps) => {\r\n    // alert(props.bg)\r\n    const styles = StyleSheet.create({\r\n        btn: {\r\n            marginTop: props.mt || 30,\r\n            backgroundColor: props.bg || \"black\",\r\n            padding: 20,\r\n            width: 300,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            borderRadius: 10\r\n        },\r\n        btnText: {\r\n            fontFamily: \"ViralFont\",\r\n            color: props.textColor || \"white\",\r\n            fontSize: 18\r\n        }\r\n    })\r\n    return (\r\n        <TouchableOpacity {...props} style={[styles.btn, props.style]}><Text style={styles.btnText}>{props.children}</Text></TouchableOpacity>\r\n    )\r\n\r\n}\r\n\r\nexport default Button\r\n","import { StyleSheet, Platform } from \"react-native\";\r\n\r\n//Auth Styles comes here\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    padding: 50,\r\n  },\r\n  logo: {\r\n    width: 300,\r\n    resizeMode: \"contain\",\r\n  },\r\n  form: {\r\n    maxWidth: \"30%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  modal: {\r\n    position: \"relative\",\r\n    flex: 0.5,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"auto\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 20,\r\n  },\r\n  closeModal: {\r\n    position: \"absolute\",\r\n    left: 10,\r\n    top: 10,\r\n  },\r\n});\r\nconst WebStyles = StyleSheet.create({\r\n  ...styles,\r\n  container: {\r\n    alignItems: \"center\",\r\n  },\r\n  logo: {\r\n    width: \"400px\",\r\n    height: \"200px\",\r\n    resizeMode: \"contain\",\r\n  },\r\n  form: {\r\n    maxWidth: \"30%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  modal: {\r\n    marginBottom: 100,\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    backgroundColor: \"#fff\",\r\n    padding: 20,\r\n    borderRadius: 20,\r\n  },\r\n});\r\n\r\nexport default Platform.OS === \"web\" ? WebStyles : styles;\r\n","import React, { Component, useState } from 'react'\r\n//For web\r\nimport { Modal as WebModal } from 'react-native-paper'\r\n//For mobile\r\nimport { Modal as MobileModal } from 'react-native'\r\nimport { Platform, View } from 'react-native'\r\nimport { Icon } from 'react-native-elements'\r\nimport Button from '../../components/Button'\r\nimport styles from './styles'\r\n\r\nconst SocialLogins = () => {\r\n    const [socialToggle, setSocialToggle] = useState(false)\r\n    return (\r\n        <View>\r\n            <Button onPress={() => setSocialToggle(true)} textColor=\"black\" bg=\"white\">Social Logins</Button>\r\n            {Platform.OS === \"web\" ? (\r\n                <WebModal visible={socialToggle} contentContainerStyle={styles.modal} overlayAccessibilityLabel=\"Close\">\r\n                    <Icon name=\"close\" containerStyle={styles.closeModal} type=\"antdesign\" onPress={() => setSocialToggle(false)} />\r\n                    {/* Buttons for OAUTH Authentication */}\r\n                    <Button bg=\"#de5246\" mt={20}>Google</Button>\r\n                    <Button bg=\"#4267B2\" mt={20}>Facebook</Button>\r\n                    <Button bg=\"#1DA1F2\" mt={20}>Twitter</Button>\r\n\r\n                </WebModal>\r\n            ) : (\r\n                <MobileModal animationType=\"slide\" transparent={true} visible={socialToggle} >\r\n                    <View style={styles.modal}>\r\n                        <Icon name=\"close\" containerStyle={styles.closeModal} type=\"antdesign\" onPress={() => setSocialToggle(false)} />\r\n                        {/* Buttons for OAUTH Authentication */}\r\n                        <Button bg=\"#de5246\" mt={20}>Google</Button>\r\n                        <Button bg=\"#4267B2\" mt={20}>Facebook</Button>\r\n                        <Button bg=\"#1DA1F2\" mt={20}>Twitter</Button>\r\n\r\n                    </View>\r\n                </MobileModal>\r\n            )}\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nexport default SocialLogins\r\n","//This files handles the firebase part of the authentication flow\r\nimport { firebaseApp } from \"../../firebase/firebase\";\r\nimport { LoginContext, RegisterContext } from \"./ModalContext\";\r\n\r\nexport const registerHandler = async (fields: RegisterContext) => {\r\n  try {\r\n    const isUsernameExists = await !!(\r\n      await firebaseApp\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .where(\"username\", \"==\", fields.username)\r\n        .get()\r\n    ).docs.length;\r\n    if (isUsernameExists) return [null, \"Username is taken\"];\r\n    const user = await firebaseApp\r\n      .auth()\r\n      .createUserWithEmailAndPassword(fields.email, fields.password);\r\n    await user.user?.updateProfile({\r\n      displayName: fields.name,\r\n      photoURL: `https://avatars.dicebear.com/api/identicon/${fields.username}.svg`,\r\n    });\r\n    await user.user?.sendEmailVerification();\r\n    const doc = await firebaseApp\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(user?.user?.uid)\r\n      .set({\r\n        username: fields.username,\r\n      })\r\n      .then(async () => {\r\n        const res = await firebaseApp\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(user?.user?.uid)\r\n          .get();\r\n        return res.data();\r\n      });\r\n    const formattedUser = {\r\n      ...user.user?.toJSON(),\r\n      status: \"loggedin\",\r\n      ...doc,\r\n    };\r\n    return [formattedUser, null];\r\n  } catch (e) {\r\n    return [null, e.message];\r\n  }\r\n};\r\nexport const loginHandler = async (fields: LoginContext) => {\r\n  try {\r\n    const user = await firebaseApp\r\n      .auth()\r\n      .signInWithEmailAndPassword(fields.email, fields.password);\r\n    const res = await firebaseApp\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(user?.user?.uid)\r\n      .get();\r\n\r\n    const formattedUser = {\r\n      ...user.user?.toJSON(),\r\n      status: \"loggedin\",\r\n      ...res.data(),\r\n    };\r\n\r\n    return [formattedUser, null];\r\n  } catch (e) {\r\n    return [null, e.message];\r\n  }\r\n};\r\n","import { FormikErrors, FormikTouched } from \"formik\"\r\nimport React, { LegacyRef } from \"react\"\r\nimport { TextInput, TextInputProps, StyleSheet, View, StyleProp, ViewStyle } from \"react-native\";\r\nimport { Span } from \"./Text\";\r\ninterface TextInputExtended extends TextInputProps {\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    validate: boolean;\r\n    touched: boolean | FormikTouched<any> | FormikTouched<any>[] | undefined;\r\n    errors: string | FormikErrors<any> | string[] | FormikErrors<any>[] | undefined;\r\n}\r\nexport const Input = React.forwardRef((props: TextInputExtended, ref: LegacyRef<TextInput>) => {\r\n    const validationColor = !props.touched ? '#ff4d00' : props.errors ? '#FF5A5F' : '#ff4d00';\r\n    const styles = StyleSheet.create({\r\n        input: {\r\n            backgroundColor: \"#fff\",\r\n            shadowColor: validationColor,\r\n            marginTop: 20,\r\n            width: 300,\r\n            paddingHorizontal: 20,\r\n            paddingVertical: 14,\r\n            fontFamily: \"ViralFont\",\r\n            fontSize: 18,\r\n            borderRadius: 10,\r\n\r\n        }\r\n    })\r\n    return (\r\n        <View style={props.containerStyle}>\r\n            <TextInput {...props} style={[styles.input, props.style]} selectionColor=\"orange\" ref={ref} />\r\n            {props.validate ?\r\n                <Span style={{ color: validationColor }}>{props.errors}</Span>\r\n                : null}\r\n        </View>\r\n    )\r\n})","import { useFormik } from 'formik'\r\nimport React, { MutableRefObject, useRef } from 'react'\r\nimport { View, TextInputProps, TextInput, StyleProp, ViewStyle } from 'react-native'\r\nimport { Input } from './Input'\r\nimport { object as Validator } from \"yup\";\r\nimport Button from './Button';\r\nimport Tags from 'react-native-tags';\r\ninterface TextInputExtended extends TextInputProps {\r\n    //Name should be the same as the state name of input\r\n    name: string,\r\n\r\n}\r\ninterface FormProps {\r\n    state: any,\r\n    validationSchema?: any,\r\n    containerStyle?: StyleProp<ViewStyle>,\r\n    inputContainerStyle?: StyleProp<ViewStyle>,\r\n    inputStyle?: StyleProp<any>,\r\n    onSubmit: (values: any) => void | Promise<any>;\r\n    children: TextInputExtended[],\r\n    button: {\r\n        title: string,\r\n        style?: any\r\n    },\r\n    Component?: React.ForwardRefExoticComponent<React.RefAttributes<Tags>>\r\n    isComponent?: boolean\r\n}\r\nconst Form = (props: FormProps) => {\r\n    const validationSchema = Validator().shape(props.validationSchema)\r\n    const { handleChange, values, handleSubmit, handleBlur,\r\n        errors,\r\n        touched, resetForm } = useFormik({\r\n            initialValues: props.state,\r\n            validationSchema,\r\n            onSubmit: props.onSubmit\r\n        })\r\n    //Mapping all inputs and creating a reference for each one\r\n    const reference = props.children.map(() => useRef<TextInput | null>())\r\n    const componentRef = useRef<Tags>(null);\r\n    //A helper function to reference the next input to focus\r\n    const nextFocus = (index: number) => {\r\n        if (reference.length - 1 === index) handleSubmit();\r\n        else reference[index + 1].current?.focus();\r\n    }\r\n    const _handleSubmit = () => {\r\n        handleSubmit()\r\n        resetForm();\r\n    }\r\n    return (\r\n        <View style={props.containerStyle}>\r\n            {\r\n                props.children.map((InputProps, index) => (\r\n                    <Input validate={!!props.validationSchema} containerStyle={props.inputContainerStyle} style={props.inputStyle}  {...InputProps} value={values[InputProps.name]} onChangeText={handleChange(`${InputProps.name}`)} key={InputProps.name} onBlur={handleBlur(`${InputProps.name}`)} touched={touched[InputProps.name]} errors={errors[InputProps.name]} ref={ref => reference[index].current = ref} onSubmitEditing={() => !errors[InputProps.name] ? nextFocus(index) : null} />\r\n                ))\r\n            }\r\n            {props.Component ?\r\n                <props.Component ref={componentRef} /> : <View></View>}\r\n            <Button style={props.button.style} onPress={() => _handleSubmit()}>{props.button.title}</Button>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n//Navigation\r\nimport { StackNavigationProp } from '@react-navigation/stack'\r\nimport { ParamListBase, useNavigation } from '@react-navigation/native';\r\n//Components\r\nimport { SafeAreaView, Image, KeyboardAvoidingView, ScrollView, View } from 'react-native'\r\nimport Button from '../../components/Button'\r\nimport { Span } from '../../components/Text';\r\nimport Loading from '../../components/Loading';\r\n//Styles and helper files\r\nimport styles from \"./styles\";\r\nimport SocialLogins from './SocialLogins'\r\nimport { loginHandler } from './handler';\r\nimport { LoginContext } from './ModalContext';\r\n//Form\r\nimport Form from '../../components/Form'\r\nimport * as Yup from \"yup\";\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectLoading, setUser, setUserErrors, setUserLoading, userError } from '../../store/taskReducer';\r\nconst Login = () => {\r\n    const navigation = useNavigation<StackNavigationProp<ParamListBase, \"Login\">>()\r\n    const error = useSelector(userError);\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(selectLoading)\r\n    const login = async (values: LoginContext) => {\r\n        //Set loading to true\r\n        dispatch(setUserLoading(true))\r\n        const [user, error] = await loginHandler(values);\r\n        \r\n        if (error) {\r\n            dispatch(setUserErrors(error))\r\n            dispatch(setUserLoading(false))\r\n        }\r\n        else if (user) {\r\n            if (user?.emailVerified) {\r\n                \r\n                dispatch(setUser(user))\r\n                \r\n                //navigate the user\r\n                navigation.replace(\"Home\")\r\n                dispatch(setUserLoading(false))\r\n            }\r\n            else if (!user?.emailVerified) {\r\n                dispatch(setUserErrors(\"Account is not verified\"))\r\n                dispatch(setUserLoading(false))\r\n            }\r\n        }\r\n    }\r\n    if (loading.load) return <Loading />\r\n    else return (\r\n        <ScrollView>\r\n            <SafeAreaView style={styles.container}>\r\n                <Image source={require(\"../../assets/logo.png\")} style={styles.logo} />\r\n                <KeyboardAvoidingView style={styles.form}>\r\n                    <Span style={{ width: 320, textAlign: \"center\" }}>{error}</Span>\r\n                    <Form state={{ email: '', password: '' }}\r\n                        children={[\r\n                            {\r\n                                placeholder: \"Email\",\r\n                                keyboardType: \"email-address\",\r\n                                textContentType: \"emailAddress\",\r\n                                name: \"email\",\r\n                            },\r\n                            {\r\n                                placeholder: \"Password\",\r\n                                secureTextEntry: true,\r\n                                textContentType: \"password\",\r\n                                name: \"password\",\r\n                            },\r\n                        ]}\r\n                        validationSchema={{\r\n                            email: Yup.string().email('Invalid email').required('Required'),\r\n                            password: Yup.string().required('Required')\r\n                        }}\r\n                        button={{ title: \"Login\" }}\r\n                        onSubmit={(values: LoginContext) => login(values)}\r\n                    />\r\n                    <Button onPress={() => navigation.replace(\"Register\")} bg=\"white\" textColor=\"black\">Register</Button>\r\n                </KeyboardAvoidingView>\r\n                <SocialLogins />\r\n            </SafeAreaView>\r\n            {/* // Ensure the components do not touch the bottom with a margin  */}\r\n            <View style={{ height: 50 }} />\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n","import React, { useState } from 'react'\r\n//Navigation\r\nimport { StackNavigationProp } from '@react-navigation/stack'\r\nimport { ParamListBase, useNavigation } from '@react-navigation/native';\r\n//Components\r\nimport { SafeAreaView, Image, KeyboardAvoidingView, ScrollView, View } from 'react-native'\r\nimport Loading from '../../components/Loading';\r\nimport Button from '../../components/Button'\r\nimport { Span } from '../../components/Text';\r\n//Styles and helper files\r\nimport styles from \"./styles\";\r\nimport SocialLogins from './SocialLogins'\r\nimport { RegisterContext } from './ModalContext';\r\nimport { registerHandler } from './handler';\r\n//Form\r\nimport Form from '../../components/Form'\r\nimport * as Yup from \"yup\";\r\n//Redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectLoading, setUser, setUserErrors, setUserLoading, userError } from '../../store/taskReducer';\r\nconst Register = () => {\r\n    const navigation = useNavigation<StackNavigationProp<ParamListBase, \"Register\">>()\r\n    const error = useSelector(userError)\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(selectLoading)\r\n    const register = async (values: RegisterContext) => {\r\n        //Set loading to true\r\n        dispatch(setUserLoading(true))\r\n        const [user, error] = await registerHandler(values);\r\n        if (user) {\r\n            //navigate the user\r\n            alert('Account has been created and a confirmation link has been sent to your email. Confirm your email and login')\r\n            navigation.navigate(\"Login\")\r\n        }\r\n        if (error) dispatch(setUserErrors(error))\r\n        //Set loading to false\r\n        dispatch(setUserLoading(false))\r\n    }\r\n    if (loading.load) return <Loading />\r\n    else return (\r\n        <ScrollView>\r\n            <SafeAreaView style={styles.container}>\r\n                <Image source={require(\"../../assets/logo.png\")} style={styles.logo} />\r\n                <KeyboardAvoidingView>\r\n                    <Span>{error}</Span>\r\n                    <Form state={{ name: '', username: '', email: '', password: '' }} validationSchema={{\r\n                        name: Yup.string().required(\"Required\"),\r\n                        username: Yup.string().required(\"Required\"),\r\n                        email: Yup.string().email('Invalid email').required('Required'),\r\n                        password: Yup.string()\r\n                            .min(6, 'Too Short!')\r\n                            .required('Required')\r\n                    }} children={\r\n                        [\r\n                            {\r\n                                placeholder: \"Name\",\r\n                                textContentType: \"name\",\r\n                                name: \"name\"\r\n                            },\r\n                            {\r\n                                placeholder: \"Username\",\r\n                                textContentType: \"username\",\r\n                                name: \"username\"\r\n                            },\r\n                            {\r\n                                placeholder: \"Email\",\r\n                                keyboardType: \"email-address\",\r\n                                textContentType: \"emailAddress\",\r\n                                name: \"email\"\r\n                            },\r\n                            {\r\n                                placeholder: \"Password\",\r\n                                secureTextEntry: true,\r\n                                textContentType: \"password\",\r\n                                name: \"password\"\r\n                            },\r\n                        ]\r\n                    }\r\n                        button={{ title: \"Register\" }}\r\n                        onSubmit={(values: RegisterContext) => register(values)}\r\n                    />\r\n                    <Button onPress={() => navigation.replace(\"Login\")} bg=\"white\" textColor=\"black\">Login</Button>\r\n                </KeyboardAvoidingView>\r\n                <SocialLogins />\r\n            </SafeAreaView>\r\n            {/* // Ensure the components do not touch the bottom with a margin  */}\r\n            <View style={{ height: 50 }} />\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Register\r\n\r\n","import React, { useEffect, useState } from 'react'\r\n//Components\r\nimport { Span } from '../../components/Text'\r\nimport Loading from '../../components/Loading'\r\nimport { Dimensions, View } from 'react-native'\r\nimport Button from '../../components/Button'\r\n//Redux\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from '../../store/taskReducer'\r\n//Firebase\r\nimport { firebaseApp } from '../../firebase/firebase'\r\n//Context\r\nimport Frenzy from '../Frenzy/FrenzyContext'\r\nconst FrenzyQuery = ({ children }: any) => {\r\n    //Initial State\r\n    const [frenzies, setfrenzies] = useState<Frenzy[] | null | \"loading\">(null)\r\n    //Pagination page\r\n    const [page, setPage] = useState(0);\r\n    const pageSize = 2;\r\n    //Query\r\n    const basePath = firebaseApp.firestore().collection(\"frenzies\");\r\n    //Fetch 1 more to determine if there are more coming in next page\r\n    const [query, setQuery] = useState(basePath.orderBy(\"createdAt\", \"desc\").limit(pageSize + 1))\r\n    //Current User\r\n    const user = useSelector(selectUser);\r\n    const nextPage = (last: Frenzy) => {\r\n        setPage(page + 1)\r\n        setQuery(query\r\n            .startAt(last[\"createdAt\"])\r\n            .limit(pageSize + 1));\r\n    }\r\n    const prevPage = (first: Frenzy) => {\r\n        console.log(\"Previous Change\" + JSON.stringify(first) + \"\\n\\n\")\r\n        setPage(page - 1)\r\n        query\r\n            .endBefore(first.createdAt)\r\n            .limit(3).get().then(res => console.log(res.docs.map(r => r.data())))\r\n        setQuery(query\r\n            .endBefore(first[\"createdAt\"])\r\n            .limitToLast(pageSize))\r\n    }\r\n    useEffect(() => {\r\n        const unsubscribe = query.onSnapshot((_frenzies) => {\r\n            setfrenzies(\"loading\")\r\n            console.log(\"Change!!\")\r\n            const promise = _frenzies.docs.map(async (doc) => {\r\n                return {\r\n                    ...doc.data(),\r\n                    liked: await (await doc.ref.collection(\"likes\").doc(user?.uid).get()).exists,\r\n                    viewed: await (await doc.ref.collection(\"views\").doc(user?.uid).get()).exists,\r\n                    id: doc.id\r\n                }\r\n            })\r\n            Promise.all(promise).then((result: any) => {\r\n                setfrenzies(result)\r\n            })\r\n        })\r\n        return () => unsubscribe();\r\n    }, [query, page])\r\n\r\n    if (!frenzies || frenzies === \"loading\") return (\r\n        <View style={{ minHeight: Dimensions.get(\"window\").height }}>\r\n            <Loading message=\"Loading Frenzies..\" />\r\n        </View>\r\n    )\r\n    console.log(frenzies)\r\n    return (\r\n        <View>\r\n            {frenzies.length > pageSize ? children({ frenzies: frenzies.filter((_, index) => index < pageSize) }) : children({ frenzies })}\r\n            <View>\r\n                <Button onPress={() => nextPage(frenzies[frenzies?.length - 1])} disabled={frenzies.length < pageSize} style={[{ marginLeft: \"auto\", marginRight: \"auto\", width: 300 }, frenzies.length < pageSize ? { opacity: 0.5 } : {}]}>\r\n                    Next 👉\r\n                </Button>\r\n                <Button onPress={() => prevPage(frenzies[0])} disabled={page === 0} style={[{ marginLeft: \"auto\", marginRight: \"auto\", width: 300 }, page === 0 ? { opacity: 0.5 } : {}]}>\r\n                    Previous 👈\r\n                </Button>\r\n                <Span style={{ textAlign: \"center\", marginTop: 20 }}>Page : {page + 1}</Span>\r\n            </View>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nexport default FrenzyQuery\r\n","import React, { useLayoutEffect } from 'react'\r\nimport { Image, StyleSheet, View, SafeAreaView, StatusBar, TouchableOpacity, ScrollView, RefreshControl, NativeModules } from 'react-native'\r\n//Navigation\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { ParamListBase } from '@react-navigation/native'\r\nimport { StackNavigationProp } from '@react-navigation/stack'\r\n//Components\r\nimport { Span, SubHeading } from '../../components/Text'\r\nimport FrenzyComponent from '../Frenzy/FrenzyComponent'\r\nimport Frenzy from '../Frenzy/FrenzyContext'\r\nimport FrenzyQuery from './FrenzyQuery'\r\n//Redux \r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectUser, setUser } from '../../store/taskReducer'\r\n//Firebase\r\nimport { firebaseApp } from '../../firebase/firebase'\r\n\r\nconst Home = () => {\r\n    //Refresh state\r\n    const [refreshing, setRefreshing] = React.useState(false);\r\n    //Refresh helper\r\n    const onRefresh = React.useCallback(() => {\r\n        setRefreshing(true);\r\n        NativeModules.DevSettings.reload()\r\n    }, []);\r\n    //Navigation Init\r\n    const navigation = useNavigation<StackNavigationProp<ParamListBase, 'Home'>>();\r\n    //User\r\n    const user = useSelector(selectUser)\r\n    //helper function\r\n    const logout = () => {\r\n        firebaseApp.auth().signOut().then(() => {\r\n            dispatch(setUser({ status: \"signedout\" }));\r\n            alert(\"Successfully Logged Out\")\r\n            navigation.replace(\"Home\")\r\n        })\r\n    }\r\n    const handleHeaderBtnPress = () => {\r\n        if (user?.uid) logout()\r\n        else navigation.navigate(\"Login\")\r\n    }\r\n\r\n    //Styling Navigation Header\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            header: () => (\r\n                <SafeAreaView style={styles.header}>\r\n                    <Image source={require(\"../../assets/icon.png\")} style={styles.headerImage} />\r\n                    <TouchableOpacity onPress={handleHeaderBtnPress}>\r\n                        <SubHeading>{user?.uid ? \"Sign Out\" : \"Sign In\"}</SubHeading>\r\n                    </TouchableOpacity>\r\n                </SafeAreaView>\r\n            ),\r\n        })\r\n    }, [navigation])\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ScrollView bounces={true} refreshControl={\r\n            <RefreshControl\r\n                refreshing={refreshing}\r\n                onRefresh={onRefresh}\r\n\r\n            />}>\r\n            {user?.uid ?\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"AddPost\")} style={styles.newPost}>\r\n                    <Span style={{ color: \"white\", textAlign: \"center\" }}>New Post</Span>\r\n                </TouchableOpacity>\r\n                : <SubHeading></SubHeading>}\r\n            <FrenzyQuery>\r\n                {({ frenzies }: { frenzies: Frenzy[] }) => {\r\n                    return (\r\n                        <>\r\n                            {frenzies.map(frenzy => (\r\n                                <FrenzyComponent Frenzy={frenzy} key={frenzy.id} navigation={navigation} />\r\n                            ))}\r\n                        </>\r\n                    )\r\n                }}\r\n            </FrenzyQuery>\r\n            <View style={{ height: 50 }} />\r\n\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        backgroundColor: \"white\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingTop: StatusBar.currentHeight,\r\n        paddingRight: 20,\r\n        paddingLeft: 20,\r\n    },\r\n    headerImage: {\r\n        width: 48,\r\n        height: 48\r\n    },\r\n    headerBtn: {\r\n        width: 100,\r\n        marginTop: 0,\r\n        padding: 10\r\n    },\r\n    newPost: {\r\n        padding: 10,\r\n        backgroundColor: \"black\"\r\n    },\r\n\r\n})\r\n","import React, { useLayoutEffect, useState } from 'react'\r\nimport { View, Text, TouchableOpacity, ScrollView } from 'react-native'\r\n//Navigation\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { ParamListBase } from '@react-navigation/native'\r\nimport { StackNavigationProp } from '@react-navigation/stack'\r\n//Components\r\nimport Form from '../../components/Form'\r\nimport Loading from '../../components/Loading'\r\nimport Tags from \"react-native-tags\";\r\nimport { Heading, SubHeading } from '../../components/Text'\r\nimport { Icon } from 'react-native-elements'\r\nimport Button from '../../components/Button'\r\nimport * as Yup from \"yup\"\r\nimport { Modal } from 'react-native-paper'\r\n//Firestore\r\nimport { firebaseApp, Firestore } from '../../firebase/firebase'\r\n//Redux\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../store/taskReducer\"\r\n//Context\r\nimport Frenzy from '../Frenzy/FrenzyContext'\r\nconst AddPost = ({ route }: any) => {\r\n    //Navigation Init\r\n    const navigation = useNavigation<StackNavigationProp<ParamListBase, 'AddPost'>>();\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerTitle: \"Create a new frenzy 🔥\"\r\n        })\r\n    }, [])\r\n    const user = useSelector(selectUser)\r\n    const launchFrenzy = (values: any) => {\r\n        setLoading(true);\r\n        if (route.params?.id) {\r\n            firebaseApp.firestore().collection(\"frenzies\").doc(route.params.id).update({\r\n                ...values,\r\n                updatedAt: Firestore.FieldValue.serverTimestamp()\r\n            }).then(() => {\r\n                firebaseApp.firestore().collection(\"frenzies\").doc(route.params.id).get().then(res => {\r\n                    setLoading(false)\r\n                    setNewFrenzy(res.data() as Frenzy)\r\n                })\r\n            }).catch(e => {\r\n                setError(e.message)\r\n            })\r\n        }\r\n        else {\r\n            firebaseApp.firestore().collection(\"frenzies\").add({\r\n                ...values,\r\n                user: user?.username,\r\n                photo: user?.photoURL,\r\n                likeCount: 0,\r\n                viewCount: 0,\r\n                commentCount: 0,\r\n                createdAt: Firestore.FieldValue.serverTimestamp(),\r\n                updatedAt: Firestore.FieldValue.serverTimestamp()\r\n            }).then((newFrenzy) => {\r\n                newFrenzy.get().then(res => {\r\n                    setLoading(false)\r\n                    setNewFrenzy(res.data() as Frenzy)\r\n                })\r\n            }).catch(e => {\r\n                setError(e.message)\r\n            })\r\n        }\r\n    }\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<null | string>(null);\r\n    const [newFrenzy, setNewFrenzy] = useState<null | Frenzy>(null);\r\n    const [descriptionInputHeight, setDIH] = useState<number | null>(null)\r\n    const [tags, setTags] = useState<string[]>(route.params?.tags || [])\r\n    if (loading) return <Loading message=\"Adding Frenzy...\" />\r\n    return (\r\n        <ScrollView style={{ display: \"flex\" }} contentContainerStyle={{ alignItems: \"center\", justifyContent: \"center\", minHeight: \"100%\" }}>\r\n\r\n            <Form\r\n                validationSchema={{\r\n                    link: Yup.string().url(\"Invalid URL\").required(\"Required!\"),\r\n                }}\r\n                state={{ link: route.params?.link || \"\", description: route.params?.description || \"\" }}\r\n                children={[\r\n                    {\r\n                        name: \"link\",\r\n                        placeholder: \"Link\",\r\n                        textContentType: \"URL\"\r\n                    },\r\n                    {\r\n                        name: \"description\",\r\n                        placeholder: \"Description\",\r\n                        multiline: true,\r\n                        style: { height: descriptionInputHeight || \"auto\" },\r\n                        onContentSizeChange: (e) => setDIH(e.nativeEvent.contentSize.height)\r\n                    },\r\n                ]}\r\n                Component={React.forwardRef((_, ref) => {\r\n                    return (\r\n                        <Tags\r\n                            initialText=\"\"\r\n                            textInputProps={{\r\n                                placeholder: \"Tags\"\r\n                            }}\r\n                            initialTags={tags}\r\n                            onChangeTags={tags => setTags(tags)}\r\n                            onTagPress={(index, tagLabel, event, deleted) =>\r\n                                console.log(index, tagLabel, event, deleted ? \"deleted\" : \"not deleted\")\r\n                            }\r\n\r\n                            containerStyle={{ width: 300 }}\r\n                            inputContainerStyle={{\r\n                                backgroundColor: \"none\",\r\n                                width: 300,\r\n                                flexBasis: \"100%\",\r\n                                height: 60,\r\n                                marginBottom: 20,\r\n                                marginTop: 20\r\n                            }}\r\n                            inputStyle={{\r\n                                backgroundColor: \"#fff\",\r\n                                paddingHorizontal: 20,\r\n                                fontFamily: \"ViralFont\",\r\n                                fontSize: 18,\r\n                                borderRadius: 10,\r\n                            }}\r\n                            maxNumberOfTags={30}\r\n\r\n                            renderTag={({ tag, index, onPress }) => (\r\n                                <TouchableOpacity key={`${tag}-${index}`} onPress={onPress} style={{\r\n                                    backgroundColor: \"black\",\r\n                                    minWidth: 50,\r\n                                    marginVertical: 10,\r\n                                    borderRadius: 20,\r\n                                    paddingVertical: 10,\r\n                                    paddingHorizontal: 15,\r\n                                    marginTop: 10,\r\n                                    marginHorizontal: 5\r\n                                }} >\r\n                                    <Text style={{ color: \"white\", textAlign: \"center\", fontWeight: \"700\" }}>#{tag}</Text>\r\n                                </TouchableOpacity>\r\n                            )\r\n                            }\r\n\r\n\r\n                        />\r\n\r\n                    )\r\n                })}\r\n                isComponent={true}\r\n                button={\r\n                    {\r\n                        title: \"Launch Frenzy 🚀\",\r\n                    }\r\n                }\r\n                onSubmit={(values) => launchFrenzy({ ...values, tags })}\r\n            />\r\n            <Text style={{ fontStyle: \"italic\", textAlign: \"center\", marginTop: 20 }}>Click space to add a tag after typing and press the tag to remove it</Text>\r\n            {/* Success Message */}\r\n            <Modal visible={!!newFrenzy} dismissable contentContainerStyle={{ backgroundColor: \"white\", width: 320, marginLeft: \"auto\", marginRight: \"auto\", display: \"flex\", alignItems: \"center\", paddingVertical: 20, borderRadius: 20 }}>\r\n                <Icon name=\"close\" containerStyle={{ alignSelf: \"flex-start\", marginLeft: 10 }} type=\"antdesign\"\r\n                    onPress={() => {\r\n                        setNewFrenzy(null);\r\n                        navigation.goBack()\r\n                    }\r\n                    } />\r\n                <Heading>🚀</Heading>\r\n                <SubHeading>Frenzy is Launched</SubHeading>\r\n                <Button onPress={() => navigation.navigate(\"Frenzy\", { frenzy: JSON.stringify(newFrenzy) })}>View</Button>\r\n            </Modal>\r\n            {/* Error Message */}\r\n            <Modal visible={!!error} dismissable contentContainerStyle={{ backgroundColor: \"white\", width: 320, marginLeft: \"auto\", marginRight: \"auto\", display: \"flex\", alignItems: \"center\", paddingVertical: 20, borderRadius: 20 }}>\r\n                <Icon name=\"close\" containerStyle={{ alignSelf: \"flex-start\", marginLeft: 10 }} type=\"antdesign\"\r\n                    onPress={() => {\r\n                        setError(null);\r\n                    }\r\n                    } />\r\n                <Heading>😭</Heading>\r\n                <SubHeading>{error || \"Something went wrong\"}</SubHeading>\r\n                <Button onPress={() => {\r\n                    setError(null);\r\n                }}>Retry</Button>\r\n            </Modal>\r\n        </ScrollView >\r\n    )\r\n}\r\n\r\nexport default AddPost\r\n","import React from 'react'\r\nimport { View, Text, Image, Platform, NativeModules } from 'react-native'\r\nimport Button from './Button'\r\ninterface ErrorProps {\r\n    message?: string,\r\n}\r\nconst Error = (props: ErrorProps) => {\r\n    return (\r\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\", backgroundColor: \"#ebeced\" }}>\r\n            <Image source={require(\"../assets/logo.png\")} style={{ width: 400, height: 200, resizeMode: \"contain\" }} />\r\n            <Text style={{ fontFamily: \"monospace\", fontSize: 30 }}>{props.message || \"Error...\"}</Text>\r\n            <Button onPress={() => NativeModules.DevSettings.reload()}>Retry</Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport { View } from 'react-native'\r\nimport { Icon } from 'react-native-elements'\r\nimport { useSelector } from 'react-redux'\r\nimport { Span, SubHeading } from '../../../components/Text'\r\nimport { selectUser } from '../../../store/taskReducer'\r\nimport { reply } from '../FrenzyContext'\r\n\r\nconst Reply = (props: { reply: reply }) => {\r\n    const { reply } = props;\r\n    const user = useSelector(selectUser);\r\n    return (\r\n        <View style={{ flexDirection: \"row\", marginLeft: 20, borderTopColor: \"gray\", borderBottomColor: \"gray\", borderTopWidth: 2, borderBottomWidth: 2, justifyContent: \"space-between\", alignItems: \"center\", marginVertical: 10, padding: 10 }}>\r\n            <View>\r\n                <Span style={{ fontWeight: \"700\", color: \"orange\" }}>@{reply.by}{\" \"}<Span style={{ opacity: 0.8, fontStyle: \"italic\" }}>said</Span></Span>\r\n                <SubHeading style={{ fontSize: 18, marginLeft: 2, marginVertical: 5 }}>{reply.reply}</SubHeading>\r\n            </View>\r\n            {reply.by === user?.username ?\r\n                <View style={{ flexDirection: \"row\", width: 100, justifyContent: \"space-between\" }}>\r\n                    <Icon name=\"edit\" type=\"entypo\" />\r\n                    <Icon name=\"trash\" type=\"entypo\" />\r\n                </View>\r\n                : null}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Reply\r\n","import React, { useEffect, useState } from 'react'\r\nimport { View, Dimensions } from 'react-native'\r\nimport { Icon } from 'react-native-elements';\r\nimport { useSelector } from 'react-redux';\r\nimport Form from '../../../components/Form';\r\nimport { Span, SubHeading } from '../../../components/Text';\r\nimport { firebaseApp, Firestore } from '../../../firebase/firebase';\r\nimport { selectUser } from '../../../store/taskReducer';\r\nimport { comment } from '../FrenzyContext';\r\nimport Reply from './Reply';\r\n\r\nconst Comment = (props: { Comment: comment, frenzyId: string }) => {\r\n    const { Comment, frenzyId } = props;\r\n    const [comment, setComment] = useState<comment>({ ...Comment, replies: [] })\r\n    const [seeReply, setSeeReply] = useState(false)\r\n    const user = useSelector(selectUser)\r\n    const addReply = async (reply: string) => {\r\n        try {\r\n\r\n            await firebaseApp.firestore().collection(\"frenzies\").doc(frenzyId).collection(\"comments\").doc(comment.id).collection(\"replies\").add({\r\n                createdAt: Firestore.FieldValue.serverTimestamp(),\r\n                updatedAt: Firestore.FieldValue.serverTimestamp(),\r\n                reply,\r\n                by: user?.username\r\n            })\r\n        }\r\n        catch (e) {\r\n            alert(\"Could not add your reply\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const unsubscribe = firebaseApp.firestore().collection(\"frenzies\").doc(frenzyId).collection(\"comments\").doc(comment.id).collection(\"replies\").onSnapshot(replies => {\r\n            const data: any = [];\r\n            replies.docs.map(reply => {\r\n                data.push({ ...reply.data(), id: reply.id })\r\n            })\r\n            setComment({ ...Comment, replies: data })\r\n        })\r\n        return () => unsubscribe();\r\n    }, [Comment])\r\n    return (\r\n        <View style={{ backgroundColor: \"white\", paddingHorizontal: 20, paddingVertical: 10, marginVertical: 20, width: \"80%\", minWidth: Dimensions.get(\"window\").width }}>\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n                <View>\r\n                    <Span style={{ fontWeight: \"700\", color: \"orange\" }}>@{comment.by}{\" \"}<Span style={{ opacity: 0.8, fontStyle: \"italic\" }}>said</Span></Span>\r\n                    <SubHeading style={{ fontSize: 18, marginLeft: 2, marginVertical: 5 }}>{comment.comment}</SubHeading>\r\n                    <Span onPress={() => setSeeReply(!seeReply)} style={{ textDecoration: \"underline\", color: \"blue\" }}>View Reply</Span>\r\n                </View>\r\n                {comment.by === user?.username ?\r\n                    <View style={{ flexDirection: \"row\", width: 100, justifyContent: \"space-between\" }}>\r\n                        <Icon name=\"edit\" type=\"entypo\" />\r\n                        <Icon name=\"trash\" type=\"entypo\" />\r\n                    </View>\r\n                    : null}\r\n            </View>\r\n            {seeReply ?\r\n                <>\r\n                    {user?.uid ? (\r\n                        <View style={{ alignSelf: \"stretch\" }}>\r\n                            <Form inputContainerStyle={{ flex: 1, alignItems: \"center\", }} inputStyle={{ alignSelf: \"stretch\", width: \"auto\", borderRadius: 0, borderColor: \"gray\", borderWidth: 1 }} containerStyle={{ flexDirection: \"row\", alignItems: \"flex-end\" }} state={{ reply: \"\" }} children={[\r\n                                {\r\n                                    name: \"reply\",\r\n                                    placeholder: `Replying to ${comment.by}`\r\n                                }\r\n                            ]} button={{ title: \"Reply\", style: { marginTop: 0, borderRadius: 0, paddingVertical: 15, width: \"auto\" } }} onSubmit={(values) => addReply(values?.reply)} isComponent={false} />\r\n                        </View>\r\n                    ) : null}\r\n                    <View>\r\n                        {\r\n                            comment.replies.map(reply => (\r\n                                <Reply key={reply.id} reply={reply} />\r\n                            ))\r\n                        }\r\n                    </View>\r\n                </>\r\n                : null}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport { Dimensions, ScrollView, Text, View } from 'react-native'\r\n//Navigation\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { ParamListBase } from '@react-navigation/native'\r\nimport { StackNavigationProp } from '@react-navigation/stack'\r\n//Redux\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../store/taskReducer';\r\n//Components\r\nimport Loading from '../../components/Loading';\r\nimport Form from '../../components/Form'\r\nimport Comment from './Comment/Comment'\r\nimport Button from '../../components/Button'\r\nimport FrenzyComponent from './FrenzyComponent'\r\nimport * as Yup from \"yup\"\r\n//Firebase\r\nimport { firebaseApp, Firestore } from '../../firebase/firebase';\r\n//Context\r\nimport * as FrenzyContext from './FrenzyContext'\r\n\r\nconst Frenzy = ({ route }: any) => {\r\n    const navigation = useNavigation<StackNavigationProp<ParamListBase, 'Frenzy'>>();\r\n    const user = useSelector(selectUser)\r\n    const [frenzy, setFrenzy] = useState<FrenzyContext.default>({ ...JSON.parse(route.params.frenzy), status: \"idle\" })\r\n    const [commenting, setCommenting] = useState(false)\r\n    const addComment = async (comment: string) => {\r\n        setCommenting(true)\r\n        try {\r\n            await firebaseApp.firestore().collection(\"frenzies\").doc(frenzy.id).update({\r\n                commentCount: Firestore.FieldValue.increment(1)\r\n            })\r\n            await firebaseApp.firestore().collection(\"frenzies\").doc(frenzy.id).collection(\"comments\").add({\r\n                createdAt: Firestore.FieldValue.serverTimestamp(),\r\n                updatedAt: Firestore.FieldValue.serverTimestamp(),\r\n                comment,\r\n                by: user?.username\r\n            })\r\n        }\r\n        catch (e) {\r\n            alert(\"Could not add your comment\")\r\n        }\r\n        setCommenting(false)\r\n    }\r\n    useLayoutEffect(() => {\r\n        if (frenzy)\r\n            navigation.setOptions({\r\n                headerTitle: `@${frenzy?.user} | ${frenzy?.link}`\r\n            })\r\n    }, [frenzy])\r\n    useEffect(() => {\r\n        async function fetch() {\r\n            firebaseApp.firestore().collection(\"frenzies\").doc(frenzy.id).onSnapshot(async (doc) => {\r\n                let data: any = {\r\n                    ...doc.data(),\r\n                    id: doc.id,\r\n                }\r\n                //Fetch Liked or not\r\n                const liked = await firebaseApp.firestore().collection(\"frenzies\").doc(doc.id).collection(\"likes\").doc(user?.uid).get();\r\n                data = { ...data, liked: liked.exists }\r\n                //Fetch viewed or not\r\n                const viewed = await firebaseApp.firestore().collection(\"frenzies\").doc(doc.id).collection(\"views\").doc(user?.uid).get();\r\n                data = { ...data, viewed: viewed.exists }\r\n                //Fetch comments\r\n                const commentList = await firebaseApp.firestore().collection(\"frenzies\").doc(doc.id).collection(\"comments\").get()\r\n                commentList.docs.map((doc) => doc.data(), doc.id)\r\n                data = {\r\n                    ...data, comments: commentList.docs.map(doc => {\r\n                        return { ...doc.data(), id: doc.id }\r\n                    })\r\n                }\r\n                //Finally making the frenzy loaded\r\n                data = { ...data, status: \"loaded\" }\r\n                console.log(\"Changing\", data)\r\n                setFrenzy(data as FrenzyContext.default)\r\n            })\r\n        }\r\n        fetch()\r\n    }, [])\r\n    if (frenzy.status === \"idle\") return <Loading message=\"Loading Frenzy\" />\r\n    return (\r\n        <>\r\n            <ScrollView style={{ flex: 1 }} contentContainerStyle={{ alignItems: \"center\" }}>\r\n                <FrenzyComponent containerStyle={{ marginVertical: 0, borderRadius: 0, minWidth: Dimensions.get(\"window\").width }} Frenzy={frenzy} navigation={navigation} afterDelete={() => navigation.goBack()} />\r\n                {commenting ? <Loading message=\"Adding Comment...\" /> : (\r\n                    <>\r\n                        <View style={{ minWidth: Dimensions.get(\"window\").width, width: \"60%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                            {user?.uid ?\r\n                                <>\r\n                                    <Form inputContainerStyle={{ flex: 1, alignItems: \"center\" }} inputStyle={{ alignSelf: \"stretch\", width: \"auto\", borderRadius: 0 }} containerStyle={{ flexDirection: \"row\", alignItems: \"flex-end\" }} state={{ comment: \"\" }} children={[\r\n                                        {\r\n                                            name: \"comment\",\r\n                                            placeholder: \"Write what you feel...\"\r\n                                        }\r\n                                    ]} button={{ title: \"Comment\", style: { marginTop: 0, borderRadius: 0, paddingVertical: 14, width: \"auto\" } }} onSubmit={(values) => addComment(values.comment)} isComponent={false} />\r\n                                </>\r\n                                : (\r\n                                    <>\r\n                                        <Button style={{ marginLeft: \"auto\", marginRight: \"auto\" }} onPress={() => navigation.navigate(\"Login\")}>Login to comment</Button>\r\n                                    </>\r\n                                )}\r\n                        </View>\r\n                        <View style={{ flex: 1 }}>\r\n                            <View style={{ flex: 0.75 }}>\r\n                                {frenzy.comments?.map(comment => (\r\n                                    <Comment Comment={comment} frenzyId={frenzy.id} key={comment.id} />\r\n                                ))}\r\n                            </View>\r\n                        </View>\r\n                    </>\r\n                )}\r\n            </ScrollView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Frenzy\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport { Platform, LogBox, View } from \"react-native\"\n//Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser, setFontsLoading, setUserLoading, setUser } from \"./store/taskReducer\";\n//Navigation\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n//Screens\nimport Login from './screens/Auth/Login';\nimport Register from './screens/Auth/Register';\nimport Home from './screens/Home/Home';\nimport AddPost from './screens/Home/AddPost';\nimport Loading from './components/Loading';\nimport Error from './components/Error';\nimport Frenzy from './screens/Frenzy/Frenzy';\n//Fonts\nimport {\n  useFonts,\n  BalooChettan2_400Regular as ViralFont\n} from '@expo-google-fonts/baloo-chettan-2'\n//Firebase\nimport { firebaseApp } from './firebase/firebase';\n\nexport default function App() {\n  const Stack = createStackNavigator();\n  //Surpressing unneccessary warning\n  if (Platform.OS !== \"web\") LogBox.ignoreLogs(['Setting a timer for a long period of time']);\n  //Check if app is loading and if there is any async function going on\n  //Get the user\n  const user = useSelector(selectUser)\n  const [_userLoading, _setUserLoading] = useState(false);\n  const [userError, setUserError] = useState(\"\");\n  const dispatch = useDispatch();\n  let [fontsLoaded] = useFonts({\n    ViralFont\n  });\n  // //FontsLoaded is a boolean which does what it means.so whenever it changes loading state changes opposite to the variable like if fontsloaded===true then loading=false\n  useEffect(() => {\n    if (fontsLoaded) dispatch(setFontsLoading(false))\n    else dispatch(setFontsLoading(true))\n  }, [fontsLoaded])\n  useEffect(() => {\n    dispatch(setUserLoading(_userLoading))\n  }, [_userLoading])\n  useEffect(() => {\n    if (!user?.uid && user?.status !== \"signedout\") {\n      _setUserLoading(true)\n      const unsubscribe = firebaseApp.auth().onAuthStateChanged(user => {\n        firebaseApp.firestore().collection(\"users\").doc(user?.uid).get().then(data => {\n          dispatch(setUser({ ...user?.toJSON(), ...data.data(), status: \"loggedin\" }))\n          _setUserLoading(false)\n        }).catch(e => {\n          if (e.code === \"unavailable\") setUserError(\"Check Your Network Connection And Try Again\")\n          else setUserError(e.message)\n          _setUserLoading(false)\n        })\n      })\n      return () => unsubscribe();\n    }\n  }, [])\n\n  if (userError) return <Error message={userError} />\n  if (!fontsLoaded || _userLoading) return <Loading />\n  else return (\n    <>\n      <NavigationContainer>\n        {/* Global Options for Navigator */}\n        <Stack.Navigator initialRouteName=\"Home\" screenOptions={{ headerTitleAlign: \"center\", headerTitleStyle: { fontFamily: \"ViralFont\", fontWeight: \"800\" } }}>\n          <Stack.Screen name=\"Home\" component={Home} />\n          <Stack.Screen name=\"AddPost\" component={AddPost} />\n          <Stack.Screen name=\"Frenzy\" component={Frenzy} />\n          <Stack.Screen name=\"Login\" component={Login} />\n          <Stack.Screen name=\"Register\" component={Register} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport taskReducer from \"./taskReducer\";\r\n\r\nconst store=configureStore({\r\n    reducer:{\r\n        reducer:taskReducer\r\n    }\r\n});\r\n\r\nexport default store;","import { registerRootComponent } from 'expo'\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store/store'\r\n//This is the updated entry point file which is overriden by the default App.tsx to ensure redux facilities\r\nconst ApplicationRoot = () => {\r\n\r\n    return (\r\n        <Provider store={store} >\r\n            <App />\r\n        </Provider >\r\n    )\r\n}\r\n\r\nexport default registerRootComponent(ApplicationRoot)\r\n","import React from 'react'\r\nimport { View, Text } from 'react-native'\r\n//Redux\r\nimport { useSelector } from 'react-redux'\r\nimport { selectLoading } from '../store/taskReducer'\r\ninterface LoadingProps {\r\n    message?: string,\r\n}\r\nconst Loading = (props: LoadingProps) => {\r\n    const loading = useSelector(selectLoading)\r\n    return (\r\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\", backgroundColor: \"#ebeced\" }}>\r\n            <Text style={{ fontFamily: \"monospace\", fontSize: 30 }}>{props.message || `Loading ${loading.which}...`}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n"],"sourceRoot":""}